name: MacOS Build
on: push

jobs:
    build_and_test:
        runs-on: macos-14
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
            
            - name: Set up Zig
              uses: mlugg/setup-zig@v2
              with:
                version: 0.14.0
            
            - name: Symlink Zig to local bin
              run: |
                mkdir -p $GITHUB_WORKSPACE/zig-bin
                ln -s $(which zig) $GITHUB_WORKSPACE/zig-bin/zig
            
            - name: Install uv
              uses: astral-sh/setup-uv@v4

            - name: Set up Python environment and install package
              run: |
                uv venv --python 3.11
                source .venv/bin/activate
                uv pip install -e .
            
            - name: Run tests
              run: |
                source .venv/bin/activate
                python tests/test_spdx_checker.py

            - name: Install wheel building dependencies
              run: |
                source .venv/bin/activate
                uv pip install build wheel delocate

            - name: Build wheel (ARM64)
              run: |
                source .venv/bin/activate
                export MACOSX_DEPLOYMENT_TARGET=14.7
                export ARCHFLAGS="-arch arm64"
                uv build --wheel

            - name: Repair wheel with delocate
              run: |
                source .venv/bin/activate
                export MACOSX_DEPLOYMENT_TARGET=14.7
                export ARCHFLAGS="-arch arm64"
                delocate-wheel -w wheelhouse -v dist/*.whl

            - name: Test repaired wheel
              run: |
                source .venv/bin/activate
                export DYLD_PRINT_LIBRARIES=1
                python -X faulthandler -v tests/test_spdx_checker.py

            - name: Test wheel installation
              run: |
                uv venv test-env --python 3.11
                source test-env/bin/activate
                uv pip install --force-reinstall --no-deps wheelhouse/*.whl
                python -c "import spdx_checker; print('Wheel installation successful!')"
                python tests/test_spdx_checker.py

            - name: Upload wheel as artifact
              uses: actions/upload-artifact@v4
              with:
                name: macos-wheel
                path: ./wheelhouse/*.whl